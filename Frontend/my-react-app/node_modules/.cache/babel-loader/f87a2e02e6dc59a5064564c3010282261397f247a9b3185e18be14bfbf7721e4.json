{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport function useTextFileManagement() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const commonState = {\n    files,\n    selectedFile,\n    fileContent,\n    editedText\n  };\n  const createFile = () => {\n    if (newFileName) {\n      const newFile = {\n        name: newFileName + '.txt',\n        content: ''\n      };\n      setFiles([...files, newFile]);\n      setNewFileName('');\n    }\n  };\n  const handleFileChange = fileInputRef => {\n    const file = fileInputRef.current.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const content = event.target.result;\n        setFileContent(content);\n      };\n      reader.readAsText(file);\n    }\n  };\n  const updateFiles = updatedFiles => {\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n  const selectFile = file => {\n    setSelectedFile(file);\n    setFileContent(file.content);\n    setIsEditing(false);\n  };\n  const editFile = () => {\n    setIsEditing(true);\n  };\n  const saveFile = () => {\n    const updatedFiles = files.map(file => {\n      if (file === selectedFile) {\n        return {\n          ...file,\n          content: editedText\n        };\n      }\n      return file;\n    });\n    updateFiles(updatedFiles);\n  };\n  const deleteFile = () => {\n    const updatedFiles = files.filter(file => file !== selectedFile);\n    setSelectedFile(null);\n    updateFiles(updatedFiles);\n  };\n  return {\n    ...commonState,\n    setEditedText,\n    isEditing,\n    newFileName,\n    setNewFileName,\n    handleFileChange,\n    createFile,\n    selectFile,\n    editFile,\n    saveFile,\n    deleteFile\n  };\n}\n_s(useTextFileManagement, \"WCL/8dTN3ikWKAqc055Tcg1VRtU=\");","map":{"version":3,"names":["useState","useTextFileManagement","_s","files","setFiles","selectedFile","setSelectedFile","fileContent","setFileContent","editedText","setEditedText","isEditing","setIsEditing","newFileName","setNewFileName","commonState","createFile","newFile","name","content","handleFileChange","fileInputRef","file","current","reader","FileReader","onload","event","target","result","readAsText","updateFiles","updatedFiles","selectFile","editFile","saveFile","map","deleteFile","filter"],"sources":["/Users/nicolevandennieuwenhuizen/mwminiproject6/Frontend/my-react-app/src/useTextFileManagement.js"],"sourcesContent":["import { useState } from 'react';\n\n\nexport function useTextFileManagement() {\n    const [files, setFiles] = useState([]);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [fileContent, setFileContent] = useState('');\n    const [editedText, setEditedText] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [newFileName, setNewFileName] = useState('');\n  \n    const commonState = {\n      files,\n      selectedFile,\n      fileContent,\n      editedText,\n    };\n  \n    const createFile = () => {\n      if (newFileName) {\n        const newFile = {\n          name: newFileName + '.txt',\n          content: '',\n        };\n        setFiles([...files, newFile]);\n        setNewFileName('');\n      }\n    };\n  \n    const handleFileChange = (fileInputRef) => {\n      const file = fileInputRef.current.files[0];\n      if (file) {\n        const reader = new FileReader();\n  \n        reader.onload = (event) => {\n          const content = event.target.result;\n          setFileContent(content);\n        };\n  \n        reader.readAsText(file);\n      }\n    };\n  \n    const updateFiles = (updatedFiles) => {\n      setFiles(updatedFiles);\n      setIsEditing(false);\n    };\n  \n    const selectFile = (file) => {\n      setSelectedFile(file);\n      setFileContent(file.content);\n      setIsEditing(false);\n    };\n  \n    const editFile = () => {\n      setIsEditing(true);\n    };\n  \n    const saveFile = () => {\n      const updatedFiles = files.map((file) => {\n        if (file === selectedFile) {\n          return { ...file, content: editedText };\n        }\n        return file;\n      });\n      updateFiles(updatedFiles);\n    };\n  \n    const deleteFile = () => {\n      const updatedFiles = files.filter((file) => file !== selectedFile);\n      setSelectedFile(null);\n      updateFiles(updatedFiles);\n    };\n  \n    return {\n      ...commonState,\n      setEditedText,\n      isEditing,\n      newFileName,\n      setNewFileName,\n      handleFileChange,\n      createFile,\n      selectFile,\n      editFile,\n      saveFile,\n      deleteFile,\n    };\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}