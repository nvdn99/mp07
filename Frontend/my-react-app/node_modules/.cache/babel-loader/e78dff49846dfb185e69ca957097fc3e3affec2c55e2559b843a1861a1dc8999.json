{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport function useTextFileManagement() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newFileName, setNewFileName] = useState(''); // Define setNewFileName\n\n  const handleFileChange = fileInputRef => {\n    const file = fileInputRef.current.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const content = event.target.result;\n        setFileContent(content);\n      };\n      reader.readAsText(file);\n    }\n  };\n  const createFile = () => {\n    if (newFileName) {\n      const newFile = {\n        name: newFileName + '.txt',\n        content: ''\n      };\n      setFiles([...files, newFile]);\n      setNewFileName(''); // Reset newFileName\n    }\n  };\n\n  const selectFile = file => {\n    setSelectedFile(file);\n    setFileContent(file.content);\n    setIsEditing(false);\n  };\n  const editFile = () => {\n    setIsEditing(true);\n  };\n  const saveFile = () => {\n    const updatedFiles = files.map(file => {\n      if (file === selectedFile) {\n        return {\n          ...file,\n          content: editedText\n        };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n  const deleteFile = () => {\n    const updatedFiles = files.filter(file => file !== selectedFile);\n    setSelectedFile(null);\n    setFiles(updatedFiles);\n  };\n  return {\n    files,\n    selectedFile,\n    fileContent,\n    editedText,\n    setEditedText,\n    isEditing,\n    newFileName,\n    setNewFileName,\n    handleFileChange,\n    createFile,\n    selectFile,\n    editFile,\n    saveFile,\n    deleteFile\n  };\n}\n_s(useTextFileManagement, \"WCL/8dTN3ikWKAqc055Tcg1VRtU=\");","map":{"version":3,"names":["useState","useTextFileManagement","_s","files","setFiles","selectedFile","setSelectedFile","fileContent","setFileContent","editedText","setEditedText","isEditing","setIsEditing","newFileName","setNewFileName","handleFileChange","fileInputRef","file","current","reader","FileReader","onload","event","content","target","result","readAsText","createFile","newFile","name","selectFile","editFile","saveFile","updatedFiles","map","deleteFile","filter"],"sources":["/Users/nicolevandennieuwenhuizen/mwminiproject6/Frontend/my-react-app/src/useTextFileManagement.js"],"sourcesContent":["import { useState } from 'react';\n\nexport function useTextFileManagement() {\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newFileName, setNewFileName] = useState(''); // Define setNewFileName\n\n  const handleFileChange = (fileInputRef) => {\n    const file = fileInputRef.current.files[0];\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        const content = event.target.result;\n        setFileContent(content);\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  const createFile = () => {\n    if (newFileName) {\n      const newFile = {\n        name: newFileName + '.txt',\n        content: '',\n      };\n      setFiles([...files, newFile]);\n      setNewFileName(''); // Reset newFileName\n    }\n  };\n\n  const selectFile = (file) => {\n    setSelectedFile(file);\n    setFileContent(file.content);\n    setIsEditing(false);\n  };\n\n  const editFile = () => {\n    setIsEditing(true);\n  };\n\n  const saveFile = () => {\n    const updatedFiles = files.map((file) => {\n      if (file === selectedFile) {\n        return { ...file, content: editedText };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n\n  const deleteFile = () => {\n    const updatedFiles = files.filter((file) => file !== selectedFile);\n    setSelectedFile(null);\n    setFiles(updatedFiles);\n  };\n\n  return {\n    files,\n    selectedFile,\n    fileContent,\n    editedText,\n    setEditedText,\n    isEditing,\n    newFileName,\n    setNewFileName,\n    handleFileChange,\n    createFile,\n    selectFile,\n    editFile,\n    saveFile,\n    deleteFile,\n  };\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMe,gBAAgB,GAAIC,YAAY,IAAK;IACzC,MAAMC,IAAI,GAAGD,YAAY,CAACE,OAAO,CAACf,KAAK,CAAC,CAAC,CAAC;IAC1C,IAAIc,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;QACzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;QACnCjB,cAAc,CAACe,OAAO,CAAC;MACzB,CAAC;MAEDJ,MAAM,CAACO,UAAU,CAACT,IAAI,CAAC;IACzB;EACF,CAAC;EAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAId,WAAW,EAAE;MACf,MAAMe,OAAO,GAAG;QACdC,IAAI,EAAEhB,WAAW,GAAG,MAAM;QAC1BU,OAAO,EAAE;MACX,CAAC;MACDnB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEyB,OAAO,CAAC,CAAC;MAC7Bd,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAED,MAAMgB,UAAU,GAAIb,IAAI,IAAK;IAC3BX,eAAe,CAACW,IAAI,CAAC;IACrBT,cAAc,CAACS,IAAI,CAACM,OAAO,CAAC;IAC5BX,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;IACrBnB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMoB,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,YAAY,GAAG9B,KAAK,CAAC+B,GAAG,CAAEjB,IAAI,IAAK;MACvC,IAAIA,IAAI,KAAKZ,YAAY,EAAE;QACzB,OAAO;UAAE,GAAGY,IAAI;UAAEM,OAAO,EAAEd;QAAW,CAAC;MACzC;MACA,OAAOQ,IAAI;IACb,CAAC,CAAC;IACFb,QAAQ,CAAC6B,YAAY,CAAC;IACtBrB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMuB,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMF,YAAY,GAAG9B,KAAK,CAACiC,MAAM,CAAEnB,IAAI,IAAKA,IAAI,KAAKZ,YAAY,CAAC;IAClEC,eAAe,CAAC,IAAI,CAAC;IACrBF,QAAQ,CAAC6B,YAAY,CAAC;EACxB,CAAC;EAED,OAAO;IACL9B,KAAK;IACLE,YAAY;IACZE,WAAW;IACXE,UAAU;IACVC,aAAa;IACbC,SAAS;IACTE,WAAW;IACXC,cAAc;IACdC,gBAAgB;IAChBY,UAAU;IACVG,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRG;EACF,CAAC;AACH;AAACjC,EAAA,CA5EeD,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}